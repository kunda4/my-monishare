import { Except } from 'type-fest'

import { type CarType, type CarTypeID, CarTypeProperties } from './car-type'

export abstract class ICarTypeService {
  public abstract update(
    carTypeId: CarTypeID,
    updates: Partial<Except<CarTypeProperties, 'id'>>,
  ): Promise<CarType>

  // When creating a car type, we don't allow an 'id' to be passed in (but require all other properties). The reason for
  // this is that the id is generated by the database.
  public abstract create(
    data: Except<CarTypeProperties, 'id'>,
  ): Promise<CarType>

  public abstract getAll(): Promise<CarType[]>

  public abstract get(id: CarTypeID): Promise<CarType>
}
